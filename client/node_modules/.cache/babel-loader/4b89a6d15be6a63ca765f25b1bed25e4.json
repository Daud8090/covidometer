{"ast":null,"code":"var _jsxFileName = \"/Users/daud/Downloads/covidometer/client/src/components/vaccine/vaccine.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Vaccine() {\n  _s();\n\n  const [number, setNumber] = React.useState(\"\");\n  const [isGoing, setisGoing] = React.useState(true);\n  const [Otp, setOtp] = React.useState(\"\");\n\n  const apihitfun = async () => {\n    const ress = await fetch(\"/api\", {\n      \"method\": \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        number: number\n      })\n    });\n    const res = await ress.json();\n    setNumber(\"\");\n    setisGoing(false);\n    console.log(res);\n  };\n\n  const otpfun = async () => {\n    const ress = await fetch(\"/validateOtp\", {\n      \"method\": \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        otp: Otp\n      })\n    });\n    const res = await ress.json();\n    console.log(res);\n  }; // function openPDF(resData, fileName) {\n  //   var ieEDGE = navigator.userAgent.match(/Edge/g);\n  //   var ie = navigator.userAgent.match(/.NET/g); // IE 11+\n  //   var oldIE = navigator.userAgent.match(/MSIE/g); \n  //   var bytes = new Uint8Array(resData); //use this if data is raw bytes else directly pass resData\n  //   var blob = new window.Blob([bytes], { type: 'application/pdf' });\n  //   if (ie || oldIE || ieEDGE) {\n  //      window.navigator.msSaveBlob(blob, fileName);\n  //   }\n  //   else {\n  //      var fileURL = URL.createObjectURL(blob);\n  //      var win = window.open();\n  //      win.document.write('<iframe src=\"' + fileURL + '\" frameborder=\"0\" style=\"border:0; top:0px; left:0px; bottom:0px; right:0px; width:100%; height:100%;\" allowfullscreen></iframe>')\n  //   }\n  // }\n\n\n  if (isGoing) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"number\",\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Mobile Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: number,\n      onInput: e => setNumber(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => apihitfun(),\n      children: \"generate otp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);else return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"otp\",\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"enter the otp:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: Otp,\n      onInput: e => setOtp(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => otpfun(),\n      children: \"generate otp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Vaccine, \"spY4Cngrpsz0fLZlIW9HXlOtOrg=\");\n\n_c = Vaccine;\nexport default Vaccine;\n\nvar _c;\n\n$RefreshReg$(_c, \"Vaccine\");","map":{"version":3,"sources":["/Users/daud/Downloads/covidometer/client/src/components/vaccine/vaccine.jsx"],"names":["React","Vaccine","number","setNumber","useState","isGoing","setisGoing","Otp","setOtp","apihitfun","ress","fetch","headers","body","JSON","stringify","res","json","console","log","otpfun","otp","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACjB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,KAAK,CAACI,QAAN,CAAe,EAAf,CAA5B;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,KAAK,CAACI,QAAN,CAAe,IAAf,CAA9B;AACA,QAAM,CAACG,GAAD,EAAMC,MAAN,IAAgBR,KAAK,CAACI,QAAN,CAAe,EAAf,CAAtB;;AACA,QAAMK,SAAS,GAAG,YAAY;AAC5B,UAAMC,IAAI,GAAC,MAAMC,KAAK,CAAC,MAAD,EAAS;AAC7B,gBAAU,MADmB;AAE7BC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,kBAAU;AAFL,OAFoB;AAM5BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEb,QAAAA,MAAM,EAAEA;AAAV,OAAf;AANsB,KAAT,CAAtB;AAQC,UAAMc,GAAG,GAAC,MAAMN,IAAI,CAACO,IAAL,EAAhB;AACAd,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAG,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACF,GAbD;;AAcA,QAAMI,MAAM,GAAG,YAAY;AACzB,UAAMV,IAAI,GAAC,MAAMC,KAAK,CAAC,cAAD,EAAiB;AACrC,gBAAU,MAD2B;AAErCC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,kBAAU;AAFL,OAF4B;AAMpCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEM,QAAAA,GAAG,EAAEd;AAAP,OAAf;AAN8B,KAAjB,CAAtB;AAQC,UAAMS,GAAG,GAAC,MAAMN,IAAI,CAACO,IAAL,EAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACF,GAXD,CAlBiB,CA8BjB;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AACA,MAAGX,OAAH,EACA,oBACE;AAAA,4BACI;AAAO,MAAA,GAAG,EAAC,QAAX;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAO,MAAA,KAAK,EAAEH,MAAd;AAAsB,MAAA,OAAO,EAAGoB,CAAD,IAAOnB,SAAS,CAACmB,CAAC,CAACC,MAAF,CAASC,KAAV;AAA/C;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAQ,MAAA,OAAO,EAAE,MAAMf,SAAS,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA,kBADF,CADA,KAWA,oBACE;AAAA,4BACI;AAAO,MAAA,GAAG,EAAC,KAAX;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAO,MAAA,KAAK,EAAEF,GAAd;AAAmB,MAAA,OAAO,EAAGe,CAAD,IAAOd,MAAM,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV;AAAzC;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAQ,MAAA,OAAO,EAAE,MAAMJ,MAAM,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA,kBADF;AASD;;GAnEQnB,O;;KAAAA,O;AAoET,eAAeA,OAAf","sourcesContent":["import React from \"react\";\n\nfunction Vaccine() {\n  const [number, setNumber] = React.useState(\"\");\n  const [isGoing, setisGoing] = React.useState(true);\n  const [Otp, setOtp] = React.useState(\"\");\n  const apihitfun = async () => {\n    const ress=await fetch(\"/api\", {\n      \"method\": \"POST\",\n      headers: {\n          \"content-type\": \"application/json\",\n          \"accept\": \"application/json\"\n        },\n       body: JSON.stringify({ number: number })\n    })\n     const res=await ress.json();\n     setNumber(\"\")\n     setisGoing(false)\n     console.log(res);\n  };\n  const otpfun = async () => {\n    const ress=await fetch(\"/validateOtp\", {\n      \"method\": \"POST\",\n      headers: {\n          \"content-type\": \"application/json\",\n          \"accept\": \"application/json\"\n        },\n       body: JSON.stringify({ otp: Otp })\n    })\n     const res=await ress.json();\n     console.log(res);\n  };\n  // function openPDF(resData, fileName) {\n  //   var ieEDGE = navigator.userAgent.match(/Edge/g);\n  //   var ie = navigator.userAgent.match(/.NET/g); // IE 11+\n  //   var oldIE = navigator.userAgent.match(/MSIE/g); \n  //   var bytes = new Uint8Array(resData); //use this if data is raw bytes else directly pass resData\n  //   var blob = new window.Blob([bytes], { type: 'application/pdf' });\n  \n  //   if (ie || oldIE || ieEDGE) {\n  //      window.navigator.msSaveBlob(blob, fileName);\n  //   }\n  //   else {\n  //      var fileURL = URL.createObjectURL(blob);\n  //      var win = window.open();\n  //      win.document.write('<iframe src=\"' + fileURL + '\" frameborder=\"0\" style=\"border:0; top:0px; left:0px; bottom:0px; right:0px; width:100%; height:100%;\" allowfullscreen></iframe>')\n  \n  //   }\n  // }\n  if(isGoing)\n  return (\n    <>\n        <label for=\"number\">\n          <strong>Mobile Number:</strong>\n        </label>\n        <input value={number} onInput={(e) => setNumber(e.target.value)} />\n        <button onClick={() => apihitfun()}>generate otp</button>\n    </>\n  );\n  else\n  return (\n    <>\n        <label for=\"otp\">\n          <strong>enter the otp:</strong>\n        </label>\n        <input value={Otp} onInput={(e) => setOtp(e.target.value)} />\n        <button onClick={() => otpfun()}>generate otp</button>\n    </>\n  );\n}\nexport default Vaccine;\n"]},"metadata":{},"sourceType":"module"}