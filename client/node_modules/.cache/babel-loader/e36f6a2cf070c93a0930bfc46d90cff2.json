{"ast":null,"code":"var _jsxFileName = \"/Users/daud/Downloads/covidometer/client/src/components/vaccine/vaccine.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Vaccine() {\n  // const [number, setNumber] = React.useState(\"\");\n  // const [isGoing, setisGoing] = React.useState(true);\n  // const [Otp, setOtp] = React.useState(\"\");\n  // const apihitfun = async () => {\n  //   const ress=await fetch(\"/api\", {\n  //     \"method\": \"POST\",\n  //     headers: {\n  //         \"content-type\": \"application/json\",\n  //         \"accept\": \"application/json\"\n  //       },\n  //      body: JSON.stringify({ number: number })\n  //   })\n  //    const res=await ress.json();\n  //    setNumber(\"\")\n  //    setisGoing(false)\n  //    console.log(res);\n  // };\n  // const otpfun = async () => {\n  //   const resfun=await fetch(\"/validateOtp\", {\n  //     \"method\": \"POST\",\n  //     headers: {\n  //         \"content-type\": \"application/json\",\n  //         \"accept\": \"application/json\"\n  //       },\n  //      body: JSON.stringify({ otp: Otp })\n  //   })\n  //    let response=await resfun.json();\n  //    console.log(\"yha ara h \")\n  //    console.log(response);\n  // };\n  // if(isGoing)\n  // return (\n  //   <>\n  //       <label for=\"number\">\n  //         <strong>Mobile Number:</strong>\n  //       </label>\n  //       <input value={number} onInput={(e) => setNumber(e.target.value)} />\n  //       <button onClick={() => apihitfun()}>generate otp</button>\n  //   </>\n  // );\n  // else\n  // return (\n  //   <>\n  //       <label for=\"otp\">\n  //         <strong>enter the otp:</strong>\n  //       </label>\n  //       <input value={Otp} onInput={(e) => setOtp(e.target.value)} />\n  //       <button onClick={() => otpfun()}>generate otp</button>\n  //   </>\n  // );\n  const base64toBlob = data => {\n    // Cut the prefix `data:application/pdf;base64` from the raw base 64\n    const base64WithoutPrefix = data.substr('data:application/pdf;base64,'.length);\n    const bytes = atob(base64WithoutPrefix);\n    let length = bytes.length;\n    let out = new Uint8Array(length);\n\n    while (length--) {\n      out[length] = bytes.charCodeAt(length);\n    }\n\n    return new Blob([out], {\n      type: 'application/pdf'\n    });\n  };\n\n  let base64String;\n  const blob = base64toBlob(base64String);\n  const url = URL.createObjectURL(blob);\n\n  /*#__PURE__*/\n  _jsxDEV(\"div\", {\n    style: {\n      border: '1px solid rgba(0, 0, 0, 0.3)',\n      height: '750px'\n    },\n    children: /*#__PURE__*/_jsxDEV(Viewer, {\n      fileUrl: url\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 1\n  }, this);\n}\n\n_c = Vaccine;\nexport default Vaccine;\n\nvar _c;\n\n$RefreshReg$(_c, \"Vaccine\");","map":{"version":3,"sources":["/Users/daud/Downloads/covidometer/client/src/components/vaccine/vaccine.jsx"],"names":["React","Vaccine","base64toBlob","data","base64WithoutPrefix","substr","length","bytes","atob","out","Uint8Array","charCodeAt","Blob","type","base64String","blob","url","URL","createObjectURL","border","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,OAAT,GAAmB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA,QAAMC,YAAY,GAAIC,IAAD,IAAU;AAC7B;AACA,UAAMC,mBAAmB,GAAGD,IAAI,CAACE,MAAL,CAAY,+BAA+BC,MAA3C,CAA5B;AAEA,UAAMC,KAAK,GAAGC,IAAI,CAACJ,mBAAD,CAAlB;AACA,QAAIE,MAAM,GAAGC,KAAK,CAACD,MAAnB;AACA,QAAIG,GAAG,GAAG,IAAIC,UAAJ,CAAeJ,MAAf,CAAV;;AAEA,WAAOA,MAAM,EAAb,EAAiB;AACbG,MAAAA,GAAG,CAACH,MAAD,CAAH,GAAcC,KAAK,CAACI,UAAN,CAAiBL,MAAjB,CAAd;AACH;;AAED,WAAO,IAAIM,IAAJ,CAAS,CAACH,GAAD,CAAT,EAAgB;AAAEI,MAAAA,IAAI,EAAE;AAAR,KAAhB,CAAP;AACH,GAbC;;AAeF,MAAIC,YAAJ;AACA,QAAMC,IAAI,GAAGb,YAAY,CAACY,YAAD,CAAzB;AACA,QAAME,GAAG,GAAGC,GAAG,CAACC,eAAJ,CAAoBH,IAApB,CAAZ;;AAEA;AAAA;AACI,IAAA,KAAK,EAAE;AACHI,MAAAA,MAAM,EAAE,8BADL;AAEHC,MAAAA,MAAM,EAAE;AAFL,KADX;AAAA,2BAMI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEJ;AAAjB;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA;AASC;;KArFQf,O;AAsFT,eAAeA,OAAf","sourcesContent":["import React from \"react\";\n\nfunction Vaccine() {\n  // const [number, setNumber] = React.useState(\"\");\n  // const [isGoing, setisGoing] = React.useState(true);\n  // const [Otp, setOtp] = React.useState(\"\");\n  // const apihitfun = async () => {\n  //   const ress=await fetch(\"/api\", {\n  //     \"method\": \"POST\",\n  //     headers: {\n  //         \"content-type\": \"application/json\",\n  //         \"accept\": \"application/json\"\n  //       },\n  //      body: JSON.stringify({ number: number })\n  //   })\n  //    const res=await ress.json();\n  //    setNumber(\"\")\n  //    setisGoing(false)\n  //    console.log(res);\n  // };\n  // const otpfun = async () => {\n  //   const resfun=await fetch(\"/validateOtp\", {\n  //     \"method\": \"POST\",\n  //     headers: {\n  //         \"content-type\": \"application/json\",\n  //         \"accept\": \"application/json\"\n  //       },\n  //      body: JSON.stringify({ otp: Otp })\n  //   })\n  //    let response=await resfun.json();\n\n  //    console.log(\"yha ara h \")\n  //    console.log(response);\n  // };\n  // if(isGoing)\n  // return (\n  //   <>\n  //       <label for=\"number\">\n  //         <strong>Mobile Number:</strong>\n  //       </label>\n  //       <input value={number} onInput={(e) => setNumber(e.target.value)} />\n  //       <button onClick={() => apihitfun()}>generate otp</button>\n  //   </>\n  // );\n  // else\n  // return (\n  //   <>\n  //       <label for=\"otp\">\n  //         <strong>enter the otp:</strong>\n  //       </label>\n  //       <input value={Otp} onInput={(e) => setOtp(e.target.value)} />\n  //       <button onClick={() => otpfun()}>generate otp</button>\n  //   </>\n  // );\n\n\n\n\n\n  const base64toBlob = (data) => {\n    // Cut the prefix `data:application/pdf;base64` from the raw base 64\n    const base64WithoutPrefix = data.substr('data:application/pdf;base64,'.length);\n\n    const bytes = atob(base64WithoutPrefix);\n    let length = bytes.length;\n    let out = new Uint8Array(length);\n\n    while (length--) {\n        out[length] = bytes.charCodeAt(length);\n    }\n\n    return new Blob([out], { type: 'application/pdf' });\n};\n\nlet base64String\nconst blob = base64toBlob(base64String);\nconst url = URL.createObjectURL(blob);\n\n<div\n    style={{\n        border: '1px solid rgba(0, 0, 0, 0.3)',\n        height: '750px',\n    }}\n>\n    <Viewer fileUrl={url} />\n</div>\n\n}\nexport default Vaccine;\n"]},"metadata":{},"sourceType":"module"}